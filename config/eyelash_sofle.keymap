#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include "keys_de.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        butq {
            bindings = <
&kp DE_CARET    &kp N1       &kp N2        &kp N3           &kp N4           &kp N5             &kp UP_ARROW     &kp N6   &kp N7     &kp N8      &kp N9  &kp N0           &kp BACKSPACE
&kp DE_SHARP_S  &kp B        &kp U         &kp DE_PERIOD    &kp DE_COMMA     &kp DE_U_UMLAUT    &kp DOWN_ARROW   &kp P    &kp C      &kp L       &kp M   &kp F            &kp X
&sl 1           &kp H        &kp I         &kp E            &kp A            &kp O              &kp LEFT_ARROW   &kp D    &kp T      &kp R       &kp N   &kp S            &sl 2
&sk LSHFT       &mt LCTRL K  &kp DE_Y      &kp DE_O_UMLAUT  &kp DE_A_UMLAUT  &kp Q              &kp RIGHT_ARROW  &kp J    &kp G      &kp W       &kp V   &sk DE_Z         &sk RIGHT_SHIFT
&kp C_MUTE      &sk LCTRL    &kp LEFT_GUI  &kp LEFT_ALT     &kp SPACE        &kp BACKSPACE      &kp ENTER        &kp TAB  &kp ENTER  &kp ESCAPE  &sl 3   &kp PRINTSCREEN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BUTQ";
        };

        symbols {
            bindings = <
&trans      &kp F1            &kp F2             &kp F3               &kp F4                &kp F5              &mmv MOVE_UP     &kp F6              &kp F7                   &kp F8                    &kp F9               &kp F10           &kp F11
&trans      &kp DE_EURO       &kp DE_UNDERSCORE  &kp DE_LEFT_BRACKET  &kp DE_RIGHT_BRACKET  &kp DE_AMPERSAND    &mmv MOVE_DOWN   &kp DE_EXCLAMATION  &kp DE_LESS_THAN         &kp DE_GREATER_THAN       &kp DE_EQUAL         &kp DE_AMPERSAND  &kp F12
&trans      &kp DE_BACKSLASH  &kp DE_SLASH       &kp DE_LEFT_BRACE    &kp DE_RIGHT_BRACE    &kp DE_ASTERISK     &mmv MOVE_LEFT   &kp DE_QUESTION     &kp DE_LEFT_PARENTHESIS  &kp DE_RIGHT_PARENTHESIS  &kp DE_MINUS         &kp DE_COLON      &kp DE_AT_SIGN
&trans      &kp DE_HASH       &kp DE_DOLLAR      &kp DE_PIPE          &kp DE_TILDE          &kp DE_GRAVE        &mmv MOVE_RIGHT  &kp DE_PLUS         &kp DE_PERCENT           &kp DE_DOUBLE_QUOTES      &kp DE_SINGLE_QUOTE  &kp DE_SEMICOLON  &trans
&kp C_MUTE  &trans            &trans             &trans               &trans                &trans              &mkp LCLK        &trans              &trans                   &trans                    &trans               &trans
            >;

            display-name = "SYMBOLS";
            sensor-bindings = <&scroll_encoder>;
        };

        controls {
            bindings = <
&trans  &trans  &trans          &trans     &trans          &trans      &trans  &trans  &trans         &trans             &trans    &trans  &trans
&trans  &trans  &trans          &kp UP     &kp SCROLLLOCK  &kp HOME    &trans  &trans  &kp PAGE_UP    &kp K_SCROLL_UP    &trans    &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp DOWN   &kp RIGHT       &kp END     &trans  &trans  &kp PAGE_DOWN  &kp K_SCROLL_DOWN  &trans    &trans  &trans
&trans  &trans  &trans          &trans     &trans          &trans      &trans  &trans  &trans         &trans             &trans    &trans  &trans
&trans  &trans  &kp LEFT_ARROW  &kp RIGHT  &trans          &trans      &trans  &trans  &trans         &kp UP             &kp DOWN  &trans
            >;

            label = "CONTROLS";
        };

        bt_rgb {
            bindings = <
&kp TILDE  &bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4       &mmv MOVE_UP     &trans  &trans          &trans      &trans     &trans       &trans
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans           &rgb_ug RGB_SPD  &rgb_ug RGB_SPI    &mmv MOVE_DOWN   &trans  &trans          &trans      &trans     &trans       &trans
&trans     &out OUT_USB  &out OUT_BLE    &trans           &rgb_ug RGB_EFR  &rgb_ug RGB_EFF    &mmv MOVE_LEFT   &trans  &trans          &trans      &trans     &trans       &trans
&trans     &sys_reset    &soft_off       &bootloader      &rgb_ug RGB_BRD  &rgb_ug RGB_BRI    &mmv MOVE_RIGHT  &trans  &studio_unlock  &sys_reset  &soft_off  &bootloader  &trans
&trans     &trans        &trans          &rgb_ug RGB_TOG  &trans           &trans             &mkp LCLK        &trans  &trans          &trans      &trans     &trans
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "BT/RGB";
        };
    };
};
